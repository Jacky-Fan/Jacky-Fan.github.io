---
layout:     post
title:      "聚类算法"
subtitle:   " \"K-均值聚类, 层次聚类\""
date:       2016-08-28 14:30:00
author:     "Jacky"
header-img: "img/post-bg-2015.jpg"
tags:
    R笔记
---


```r
# 应用案例—K-均值聚类
# 在本例中，我们使用iris数据集演示k-means聚类的过程。
iris2<-iris
# 移除Species属性
iris2$Species<-NULL # 等价于 iris2 <- iris2[,1:4]
# 利用kmeans()函数进行k-means聚类，并将聚类结果储存在变量kmeans.result中。
(kmeans.result<-kmeans(iris2,3))
```

```
## K-means clustering with 3 clusters of sizes 50, 62, 38
## 
## Cluster means:
##   Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1     5.006000    3.428000     1.462000    0.246000
## 2     5.901613    2.748387     4.393548    1.433871
## 3     6.850000    3.073684     5.742105    2.071053
## 
## Clustering vector:
##   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
##  [36] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
##  [71] 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 3 3 3
## [106] 3 2 3 3 3 3 3 3 2 2 3 3 3 3 2 3 2 3 2 3 3 2 2 3 3 3 3 3 2 3 3 3 3 2 3
## [141] 3 3 2 3 3 3 2 3 3 2
## 
## Within cluster sum of squares by cluster:
## [1] 15.15100 39.82097 23.87947
##  (between_SS / total_SS =  88.4 %)
## 
## Available components:
## 
## [1] "cluster"      "centers"      "totss"        "withinss"    
## [5] "tot.withinss" "betweenss"    "size"         "iter"        
## [9] "ifault"
```

```r
# 查看划分效果
table(iris$Species,kmeans.result$cluster)
```

```
##             
##               1  2  3
##   setosa     50  0  0
##   versicolor  0 48  2
##   virginica   0 14 36
```

```r
# 然后，绘制所有的簇和簇中心。
plot(iris2[c("Sepal.Length","Sepal.Width")],
     col=kmeans.result$cluster)
# plot cluster centers
points(kmeans.result$centers[,c("Sepal.Length","Sepal.Width")],
       col=1:3,pch=8,cex=2)
```

![plot of chunk unnamed-chunk-3](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-3-1.png)

```r
#应用案例:利用Vehicle数据集进行K均值聚类
# 导入数据源
vehicle <- read.csv("Vehicle.csv")
getwd()
```

```
## [1] "C:/Users/JACKY/Documents"
```

```r
vehicle1 <- vehicle
# 移除NUMBER.OF.CLASSES变量
#vehicle1$NUMBER.OF.CLASSES <- NULL
vehicle1 <- vehicle1[,1:18]
# 利用kmeans()函数进行k-means聚类，并将聚类结果储存在变量kmeans.result中。
(kmeans.result<-kmeans(vehicle1,4))
```

```
## K-means clustering with 4 clusters of sizes 18, 13, 42, 21
## 
## Cluster means:
##   COMPACTNESS CIRCULARITY DISTANCE.CIRCULARITY RADIUS.RATIO
## 1    86.11111    37.44444             61.72222     126.2222
## 2    96.76923    45.53846             89.53846     198.5385
## 3    89.04762    42.85714             76.38095     158.4762
## 4   102.52381    53.85714            102.23810     204.3333
##   PR.AXIS.ASPECT.RATIO MAX.LENGTH.ASPECT.RATIO SCATTER.RATIO ELONGATEDNESS
## 1             55.94444                6.500000      127.7778      52.66667
## 2             65.69231                7.692308      183.7692      35.46154
## 3             64.14286               10.142857      152.0000      43.95238
## 4             63.23810                9.190476      218.5714      30.52381
##   PR.AXIS.RECTANGULARITY MAX.LENGTH.RECTANGULARITY ALONG.MAJOR.AXIS
## 1               17.72222                  131.2222         147.9444
## 2               21.61538                  147.5385         204.1538
## 3               19.16667                  144.4286         177.2619
## 4               24.52381                  167.2381         234.9048
##   ALONG.MINOR.AXIS SCALED.RADIUS.OF.GYRATION SKEWNESS.ABOUT.MAJOR.AXIS
## 1         241.5000                  133.7778                  74.22222
## 2         515.0769                  178.6154                  69.61538
## 3         343.7857                  167.5714                  75.04762
## 4         713.2381                  225.1905                  73.95238
##   SKEWNESS.ABOUT.MINOR.AXIS KURTOSIS.ABOUT.MINOR.AXIS
## 1                  5.000000                  9.666667
## 2                  4.153846                  9.000000
## 3                  5.714286                 10.428571
## 4                  5.761905                 11.571429
##   KURTOSIS.ABOUT.MAJOR.AXIS HOLLOWS.RATIO
## 1                  186.4444      191.4444
## 2                  193.9231      198.5385
## 3                  187.8571      195.2381
## 4                  187.0952      194.4762
## 
## Clustering vector:
##  [1] 3 3 4 3 3 4 3 1 1 2 1 1 3 3 2 4 1 2 4 4 3 1 3 3 4 3 1 4 2 3 3 3 3 4 3
## [36] 3 3 3 4 3 4 1 3 3 4 3 1 3 3 3 1 3 4 3 4 1 2 3 4 1 2 1 1 3 2 3 3 4 3 2
## [71] 4 4 2 1 3 2 2 3 4 3 3 4 1 3 3 4 3 1 2 1 4 3 2 3
## 
## Within cluster sum of squares by cluster:
## [1]  28888.78  47840.00 140416.74 287296.57
##  (between_SS / total_SS =  86.1 %)
## 
## Available components:
## 
## [1] "cluster"      "centers"      "totss"        "withinss"    
## [5] "tot.withinss" "betweenss"    "size"         "iter"        
## [9] "ifault"
```

```r
# 查看分类效果
table(vehicle$NUMBER.OF.CLASSES,kmeans.result$cluster)
```

```
##       
##         1  2  3  4
##   bus   0  6 15  5
##   opel  3  3  5  9
##   saab  3  4  6  7
##   van  12  0 16  0
```

```r
# 对聚类结果进行可视化
plot(vehicle1[,1:2],col=kmeans.result$cluster)
points(kmeans.result$centers[,1:2],col=1:4,pch=8,cex=2)
```

![plot of chunk unnamed-chunk-6](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-6-1.png)

```r
# 应用案例—层次聚类
w<-read.csv("LA.Neighborhoods.csv")
w<-data.frame(w,density=w$Population/w$Area)
# 选择变量
u<-w[,c(1,2,5,6,11,16)]
# 标准化数据，聚类方法="complete"
hh<-hclust(dist(scale(u[,-1])),"complete")
# 画树状图
plot(hh,labels=w[,1],cex=0.6)

# 自动分成5类
rect.hclust(hh,k=5)
```

![plot of chunk unnamed-chunk-7](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-7-1.png)

```r
# 画出数据分层聚类所得5类街区按照经纬度在洛杉矶的点图
id<-cutree(hh,k=5)
ppp=c(7,17,19,21,24)
plot(w[id==1,14:15],pch=ppp[1],col=1,xlim=c(-118.7,-118.1),
     ylim=c(33.73,34.32),main="Los Angeles")
for(i in 2:5) points(w[id==i,14:15],pch=ppp[i])
legend("bottomleft",pch=ppp,paste("Cluster",1:5))
```

![plot of chunk unnamed-chunk-8](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-8-1.png)

```r
#应用案例 mtcars数据集-层次聚类
# 选择变量
mtcars1 <- mtcars[,c('mpg','disp','hp','drat','wt','qsec')]
# 标准化数据，聚类方法="complete"
h <- hclust(dist(scale(mtcars1)),'complete')
# 画树状图
plot(h,labels=rownames(mtcars1),cex=0.6)

# 自动分成4类
rect.hclust(h,k=4)
```

![plot of chunk unnamed-chunk-9](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-9-1.png)

```r
w <- t(mtcars)
h1 <- hclust(dist(w))
plot(h1)
```

![plot of chunk unnamed-chunk-10](http://oiqvvwjga.bkt.clouddn.com/k-meansunnamed-chunk-10-1.png)
