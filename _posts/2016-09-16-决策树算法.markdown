---
layout:     post
title:      "决策树分类"
subtitle:   " \"CART决策树算法,条件推理决策树算法\""
date:       2016-09-16 16:00:00
author:     "Jacky"
header-img: "img/post-bg-2015.jpg"
tags:
    R实战
    Decision Tree
    
---


```r
#### C5.0决策树算法
# 导入汽车数据集
xaa <- read.table("xaa.dat")
xab <- read.table("xab.dat")

library(C50)
mod <- C5.0(xaa$V19 ~ .,data=xaa)
mod
```

```
## 
## Call:
## C5.0.formula(formula = xaa$V19 ~ ., data = xaa)
## 
## Classification Tree
## Number of samples: 94 
## Number of predictors: 18 
## 
## Tree size: 14 
## 
## Non-standard options: attempt to group attributes
```

```r
summary(mod)
```

```
## 
## Call:
## C5.0.formula(formula = xaa$V19 ~ ., data = xaa)
## 
## 
## C5.0 [Release 2.07 GPL Edition]  	Sat Dec 31 20:31:28 2016
## -------------------------------
## 
## Class specified by attribute `outcome'
## 
## Read 94 cases (19 attributes) from undefined.data
## 
## Decision tree:
## 
## V8 <= 40:
## :...V6 <= 7: bus (11)
## :   V6 > 7:
## :   :...V1 > 103: saab (8/1)
## :       V1 <= 103:
## :       :...V15 > 4: opel (9)
## :           V15 <= 4:
## :           :...V16 > 18: opel (2)
## :               V16 <= 18:
## :               :...V2 <= 54: saab (6)
## :                   V2 > 54: opel (2)
## V8 > 40:
## :...V1 <= 80:
##     :...V9 <= 18: opel (3)
##     :   V9 > 18: saab (3/1)
##     V1 > 80:
##     :...V3 > 77: van (16)
##         V3 <= 77:
##         :...V8 <= 46:
##             :...V10 <= 134: saab (3/1)
##             :   V10 > 134: bus (16/1)
##             V8 > 46:
##             :...V15 <= 4: van (7)
##                 V15 > 4:
##                 :...V15 <= 6: saab (2)
##                     V15 > 6: van (6/1)
## 
## 
## Evaluation on training data (94 cases):
## 
## 	    Decision Tree   
## 	  ----------------  
## 	  Size      Errors  
## 
## 	    14    5( 5.3%)   <<
## 
## 
## 	   (a)   (b)   (c)   (d)    <-classified as
## 	  ----  ----  ----  ----
## 	    26                      (a): class bus
## 	     1    16     3          (b): class opel
## 	                19     1    (c): class saab
## 	                      28    (d): class van
## 
## 
## 	Attribute usage:
## 
## 	100.00%	V8
## 	 88.30%	V1
## 	 53.19%	V3
## 	 40.43%	V6
## 	 36.17%	V15
## 	 20.21%	V10
## 	 10.64%	V16
## 	  8.51%	V2
## 	  6.38%	V9
## 
## 
## Time: 0.0 secs
```

```r
# 利用predict()函数对训练集数据进行预测，并计算其混淆矩阵：
pred <- predict(mod,xab,type="class")
(a=table(xab$V19,pred))
```

```
##       pred
##        bus opel saab van
##   bus   22    0    3   1
##   opel   4    8    7   3
##   saab   2    5    6   8
##   van    3    0    1  21
```

```r
(b=paste0(round((sum(a)-sum(diag(a)))/sum(a),4)*100,"%"))
```

```
## [1] "39.36%"
```

```r
#### CART决策树算法
## 利用CART算法识别汽车类型
library(rpart)
(b=rpart(xaa$V19~.,data=xaa))
```

```
## n= 94 
## 
## node), split, n, loss, yval, (yprob)
##       * denotes terminal node
## 
##  1) root 94 66 van (0.27659574 0.21276596 0.21276596 0.29787234)  
##    2) V6< 7.5 43 19 bus (0.55813953 0.13953488 0.13953488 0.16279070)  
##      4) V10>=135.5 25  1 bus (0.96000000 0.04000000 0.00000000 0.00000000) *
##      5) V10< 135.5 18 11 van (0.00000000 0.27777778 0.33333333 0.38888889) *
##    3) V6>=7.5 51 30 van (0.03921569 0.27450980 0.27450980 0.41176471)  
##      6) V8< 41 27 13 opel (0.00000000 0.51851852 0.48148148 0.00000000)  
##       12) V1< 103.5 19  6 opel (0.00000000 0.68421053 0.31578947 0.00000000) *
##       13) V1>=103.5 8  1 saab (0.00000000 0.12500000 0.87500000 0.00000000) *
##      7) V8>=41 24  3 van (0.08333333 0.00000000 0.04166667 0.87500000) *
```

```r
# 基于此数据的结果画出决策树的树状图
plot(b);text(b)
```

![plot of chunk unnamed-chunk-6](http://oiqvvwjga.bkt.clouddn.com/decision%20treeunnamed-chunk-6-1.png)

```r
library(rattle)
fancyRpartPlot(b)
```

```
## Error in loadNamespace(name): there is no package called 'rpart.plot'
```

```r
# 利用predict()函数对训练集数据进行预测，并计算其混淆矩阵：
pred <- predict(b,xab,type="class")
(a=table(xab$V19,pred))
```

```
##       pred
##        bus opel saab van
##   bus   17    0    0   9
##   opel   3    8    3   8
##   saab   2    5    5   9
##   van    4    0    0  21
```

```r
(b=paste0(round((sum(a)-sum(diag(a)))/sum(a),4)*100,"%"))
```

```
## [1] "45.74%"
```

```r
## 利用CART判断汽车的舒适度
# 导入car数据集
car <- read.table("car.data",sep = ",")
# 对变量重命名
colnames(car) <- c("buy","main","doors","capacity","lug_boot","safety","accept")
# 查看数据结构
str(car)
```

```
## 'data.frame':	1728 obs. of  7 variables:
##  $ buy     : Factor w/ 4 levels "high","low","med",..: 4 4 4 4 4 4 4 4 4 4 ...
##  $ main    : Factor w/ 4 levels "high","low","med",..: 4 4 4 4 4 4 4 4 4 4 ...
##  $ doors   : Factor w/ 4 levels "2","3","4","5more": 1 1 1 1 1 1 1 1 1 1 ...
##  $ capacity: Factor w/ 3 levels "2","4","more": 1 1 1 1 1 1 1 1 1 2 ...
##  $ lug_boot: Factor w/ 3 levels "big","med","small": 3 3 3 2 2 2 1 1 1 3 ...
##  $ safety  : Factor w/ 3 levels "high","low","med": 2 3 1 2 3 1 2 3 1 2 ...
##  $ accept  : Factor w/ 4 levels "acc","good","unacc",..: 3 3 3 3 3 3 3 3 3 3 ...
```

```r
# 数据分区，按照变量accept变量进行等比抽样，80%为训练集，20%为测试集
library(caret)
ind <- createDataPartition(car$accept,times=1,p=0.8,list=F) # 训练集下表
train <- car[ind,] # 训练集
test <- car[-ind,] # 测试集
# 查看变量accept各因子占比
prop.table(table(car$accept))
```

```
## 
##        acc       good      unacc      vgood 
## 0.22222222 0.03993056 0.70023148 0.03761574
```

```r
prop.table(table(train$accept))
```

```
## 
##        acc       good      unacc      vgood 
## 0.22254335 0.04046243 0.69942197 0.03757225
```

```r
prop.table(table(test$accept))
```

```
## 
##       acc      good     unacc     vgood 
## 0.2209302 0.0377907 0.7034884 0.0377907
```

```r
# 构建分类模型
mod <- rpart(train$accept~.,data=train)
# 对测试集数据进行预测
pred <- predict(mod,test,type="class")
head(pred)
```

```
##     3     7     9    18    26    32 
## unacc unacc unacc unacc unacc unacc 
## Levels: acc good unacc vgood
```

```r
# 构建混淆矩阵，查看预测效果
# 查看训练集的误差率
(a <- table(train$accept,predict(mod,train,type="class")))
```

```
##        
##         acc good unacc vgood
##   acc   290   11     6     1
##   good    0   48     0     8
##   unacc  29    3   936     0
##   vgood  11    0     0    41
```

```r
paste0(round((sum(a)-sum(diag(a)))/sum(a),4)*100,"%")
```

```
## [1] "4.99%"
```

```r
# 查看测试集的误差率
(b <- table(test$accept,predict(mod,test,type="class")))
```

```
##        
##         acc good unacc vgood
##   acc    68    5     1     2
##   good    0   12     0     1
##   unacc  16    1   225     0
##   vgood   2    0     0    11
```

```r
paste0(round((sum(b)-sum(diag(b)))/sum(b),4)*100,"%")
```

```
## [1] "8.14%"
```

```r
#### 条件推理决策树算法
## 利用条件推理决策树算法识别汽车类型
library(party)
model1 <- ctree(xaa$V19~.,data=xaa)
model1
```

```
## 
## 	 Conditional inference tree with 6 terminal nodes
## 
## Response:  xaa$V19 
## Inputs:  V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18 
## Number of observations:  94 
## 
## 1) V8 <= 40; criterion = 1, statistic = 25.045
##   2) V6 <= 7; criterion = 1, statistic = 27.857
##     3)*  weights = 11 
##   2) V6 > 7
##     4)*  weights = 27 
## 1) V8 > 40
##   5) V10 <= 133; criterion = 0.984, statistic = 16.515
##     6)*  weights = 17 
##   5) V10 > 133
##     7) V3 <= 76; criterion = 0.98, statistic = 15.995
##       8) V7 <= 146; criterion = 0.997, statistic = 17.488
##         9)*  weights = 7 
##       8) V7 > 146
##         10)*  weights = 14 
##     7) V3 > 76
##       11)*  weights = 18
```

```r
plot(model1)
```

![plot of chunk unnamed-chunk-20](http://oiqvvwjga.bkt.clouddn.com/decision%20treeunnamed-chunk-20-1.png)

```r
# 构建混淆矩阵，查看模型评估效果
# 对训练集构建混淆矩阵，查看误差率
(a <- table(xaa$V19,predict(model1,xaa)))
```

```
##       
##        bus opel saab van
##   bus   25    0    0   1
##   opel   0   14    0   6
##   saab   0   13    0   7
##   van    0    0    0  28
```

```r
paste0(round((sum(a)-sum(diag(a)))/sum(a),4)*100,"%")
```

```
## [1] "28.72%"
```

```r
# 查看测试集的误差率
(b <- table(xab$V19,predict(model1,xab)))
```

```
##       
##        bus opel saab van
##   bus   21    0    0   5
##   opel   4   11    0   7
##   saab   2   10    0   9
##   van    1    0    0  24
```

```r
paste0(round((sum(b)-sum(diag(b)))/sum(b),4)*100,"%")
```

```
## [1] "40.43%"
```

```r
## 利用条件推理决策树算法识别汽车类型
model2 <- ctree(train$accept~.,data=train)

# 构建混淆矩阵，查看模型评估效果
# 对训练集构建混淆矩阵，查看误差率
(a <- table(train$accept,predict(model2,train)))
```

```
##        
##         acc good unacc vgood
##   acc   284   11    11     2
##   good    0   48     0     8
##   unacc  19    3   946     0
##   vgood   0    0     0    52
```

```r
paste0(round((sum(a)-sum(diag(a)))/sum(a),4)*100,"%")
```

```
## [1] "3.9%"
```

```r
# 查看测试集的误差率
(b <- table(test$accept,predict(model2,test)))
```

```
##        
##         acc good unacc vgood
##   acc    65    5     2     4
##   good    0   12     0     1
##   unacc  16    1   225     0
##   vgood   0    0     0    13
```

```r
paste0(round((sum(b)-sum(diag(b)))/sum(b),4)*100,"%")
```

```
## [1] "8.43%"
```

